import { HorizontalBox, VerticalBox, GridBox, Button } from "std-widgets.slint";

// From RoundedIcon.cpp
component RoundedIcon inherits Rectangle {
    in property <bool> isBright;
    in property <bool> isSmall;
    in property <image> iconName <=> m-graphicLabel.source;
    in property <float> background-opacity <=> background-fill.opacity;
    in property <color> gradient_color_1 : #ec655b;
    in property <color> gradient_color_2 : #db4b08;
    in property <color> gradient_color_3 : #7d88f0;
    in property <color> gradient_color_4 : #4601b4;

    height: root.isSmall ? 60px : 68px;
    width: root.isSmall ? 60px : 68px;

    background-fill := Rectangle {
        background: root.isBright ? @linear-gradient(135deg, gradient_color_1, gradient_color_2) : @linear-gradient(135deg, gradient_color_3, gradient_color_4);
        border-radius: 6px;
        drop-shadow-offset-y: 0mm;
        opacity: 1.0;
    }

    m-graphicLabel := Image {
        x: (parent.width - self.width) / 2;
        y: (parent.height - self.height) / 2;
    }
}

component TemperatureWidget inherits Rectangle{
    in property <string> temp_display: "Waiting for data..";
    HorizontalBox {
        RoundedIcon {
            isBright: true;
            isSmall: false;
            iconName: @image-url("images/temperature.png") ; // Placeholder image path
        }
        Text {
            vertical-alignment: center;
            font-size: 13px;
            text: root.temp_display;  // Bind the text property to the displayedText property
        }
    }
}

component HumidityWidget inherits Rectangle{
    in property <string> humidity_display: "Waiting for data..";
    HorizontalBox {
        RoundedIcon {
            isBright: false;
            isSmall: false;
            gradient_color_3 : #289ee2;
            gradient_color_4 : #076ca7;
            iconName: @image-url("images/humidity.png") ; // Placeholder image path
        }
        Text {
            vertical-alignment: center;
            font-size: 13px;
            text: root.humidity_display;  // Bind the text property to the displayedText property
        }
    }
}
component PressureWidget inherits Rectangle{
    in property <string> pressure_display: "Waiting for data..";
    HorizontalBox {
        RoundedIcon {
            isBright: false;
            isSmall: false;
            gradient_color_3 : #54c7a4;
            gradient_color_4 : #068f5a;
            iconName: @image-url("images/pressure.png") ; // Placeholder image path
        }
        Text {
            vertical-alignment: center;
            font-size: 13px;
            text: root.pressure_display;  // Bind the text property to the displayedText property
        }
    }
}
component WindWidget inherits Rectangle{
    in property <string> wind_display: "Waiting for data..";
    HorizontalBox {
        RoundedIcon {
            isBright: true;
            isSmall: false;
            gradient_color_1 : #a1cbe4;
            gradient_color_2 : #5d86c4;
            iconName: @image-url("images/wind.png") ; // Placeholder image path
        }
        Text {
            vertical-alignment: center;
            font-size: 13px;
            text: root.wind_display;  // Bind the text property to the displayedText property
        }
    }
}
export component AppWindow inherits Window {

    in property <string> pressure_display: "Waiting for data..";
    in property <string> temperature_display: "Waiting for data..";
    in property <string> wind_display: "Waiting for data..";
    in property <string> humidity_display: "Waiting for data..";
    HorizontalBox {
        alignment: LayoutAlignment.stretch;
        // Sidebar
        Rectangle {
            width: 150px;
            background: #333; // Dark gray background for the sidebar
            VerticalBox {
                spacing: 10px;
                padding: 20px;
                    //model: ["Dashboard", "Settings", "Help", "Exit"]; // List of buttons
                    Button {
                        text: "Dashboard";
                        height: 40px;
                    }
                    Button {
                        text: "Settings";
                        height: 40px;
                    }
                    Button {
                        text: "Help";
                        height: 40px;
                    }
                    Button {
                        text: "Exit";
                        height: 40px;
                    }
            } 
        }

        // Main content: Grid layout for icons
        GridBox {
            spacing: 20px;
            padding: 20px;

            Row{
                TemperatureWidget {
                    temp_display: temperature_display;
                }
                HumidityWidget {
                    humidity_display: humidity_display;
                }
            }
            Row{
                PressureWidget {
                    pressure_display: pressure_display;
                }
                WindWidget {
                    wind_display: wind_display;
                }
            }
        }
    }
}
